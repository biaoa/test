<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linle.preferentialType.mapper.PreferentialTypeMapper" >
  <resultMap id="BaseResultMap" type="com.linle.entity.sys.PreferentialType" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="name" property="name"/>
  </resultMap>
  
  <resultMap type="com.linle.mobileapi.v1.model.Privilege" id="APIResultMap">
  	<result column="id" property="type"/>
  	<result column="name" property="pName"/>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, description, type, create_date, update_date, status,name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from preferential_type
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from preferential_type
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.linle.entity.sys.PreferentialType" >
    insert into preferential_type (id, description, type, 
      create_date, update_date, status,name
      )
    values (#{id,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      ,#{name})
  </insert>
  <insert id="insertSelective" parameterType="com.linle.entity.sys.PreferentialType" >
    insert into preferential_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="name !=null">
      	name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="name !=null">
      	#{name},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.linle.entity.sys.PreferentialType" >
    update preferential_type
    <set >
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="name !=null">
      	name = #{name},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linle.entity.sys.PreferentialType" >
    update preferential_type
    set description = #{description,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      name = #{name}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="getAllData" parameterType="page" resultMap="BaseResultMap">
  		    select 
    <include refid="Base_Column_List" />
    from preferential_type
  </select>
  
  <select id="getallType" resultMap="BaseResultMap">
  				    select 
    <include refid="Base_Column_List" />
    from preferential_type
  </select>
  
  <select id="getAllTypeForAPI" resultMap="APIResultMap">
  		select id, name
  		from preferential_type
  </select>
</mapper>