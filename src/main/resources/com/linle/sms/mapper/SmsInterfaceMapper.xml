<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linle.sms.mapper.SmsInterfaceMapper" >
  <resultMap id="BaseResultMap" type="com.linle.entity.SmsInterface" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="param" property="param" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, type, address, param, content, create_date
  </sql>
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sms_interface
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getByDateId" resultMap="BaseResultMap" parameterType="int" >
    select 
    <include refid="Base_Column_List" />
    from sms_interface
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sms_interface
    where type = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.linle.entity.SmsInterface" >
    insert into sms_interface (id, name, type, 
      address, param, content, 
      createdate)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{param,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.linle.entity.SmsInterface" >
    insert into sms_interface
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="param != null" >
        param,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createdate != null" >
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="param != null" >
        #{param,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.linle.entity.SmsInterface" >
    update sms_interface
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="param != null" >
        param = #{param,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        create_date = #{createdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linle.entity.SmsInterface" >
    update sms_interface
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      param = #{param,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_date = #{createdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>