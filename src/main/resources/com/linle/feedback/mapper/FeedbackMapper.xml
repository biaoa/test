<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linle.feedback.mapper.FeedbackMapper" >
  <resultMap id="BaseResultMap" type="com.linle.entity.sys.Feedback" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="mobile_info" property="mobileInfo" jdbcType="VARCHAR" />
    <result column="sys_version" property="sysVersion" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="type" property="type"/>
    <result column="mobile_version" property="mobileVersion"/>
    <result column="del_flag" property="delFlag"/>
    <association column="user_id" property="user"  select="com.linle.user.mapper.UserMapper.getById" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, content, mobile_info, sys_version, user_id, create_date, update_date,type,mobile_version,del_flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from feedback
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from feedback
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.linle.entity.sys.Feedback" >
    insert into feedback (id, content, mobile_info, 
      sys_version, user_id, create_date, 
      update_date,type,mobile_version,del_flag)
    values (#{id,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{mobileInfo,jdbcType=VARCHAR}, 
      #{sysVersion,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP},#{type},#{mobileVersion},#{delFlag})
  </insert>
  <insert id="insertSelective" parameterType="com.linle.entity.sys.Feedback" >
    insert into feedback
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="mobileInfo != null" >
        mobile_info,
      </if>
      <if test="sysVersion != null" >
        sys_version,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="type !=null">
      	type,
      </if>
      <if test="mobileVersion !=null">
      	mobile_version,
      </if>
      <if test="delFlag !=null">
      	del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="mobileInfo != null" >
        #{mobileInfo,jdbcType=VARCHAR},
      </if>
      <if test="sysVersion != null" >
        #{sysVersion,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type !=null">
      	#{type},
      </if>
      <if test="mobileVersion !=null">
      	#{mobileVersion},
      </if>
      <if test="delFlag !=null">
      	#{delFlag},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.linle.entity.sys.Feedback" >
    update feedback
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="mobileInfo != null" >
        mobile_info = #{mobileInfo,jdbcType=VARCHAR},
      </if>
      <if test="sysVersion != null" >
        sys_version = #{sysVersion,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type !=null">
      	type = #{type},
      </if>
      <if test="mobileVersion !=null">
      	mobile_version = #{mobileVersion},
      </if>
      <if test="delFlag !=null">
        del_flag = #{delFlag},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linle.entity.sys.Feedback" >
    update feedback
    set content = #{content,jdbcType=VARCHAR},
      mobile_info = #{mobileInfo,jdbcType=VARCHAR},
      sys_version = #{sysVersion,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      type = #{type},
      mobile_version  = #{mobileVersion},
      del_flag = #{delFlag}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="getAllData" resultMap="BaseResultMap" parameterType="page">
     select 
     <include refid="Base_Column_List" />
      from feedback
     order by  del_flag desc,create_date desc
  </select>
  
  <update id="del" parameterType="com.linle.entity.sys.Feedback">
  	update feedback
  	set del_flag = #{delFlag},update_date=now()
  	where id = #{id}
  </update>
</mapper>