<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linle.cTopicReadRecord.mapper.CTopicReadRecordMapper" >
  <resultMap id="BaseResultMap" type="com.linle.cTopicReadRecord.model.CTopicReadRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="type_id" property="typeId" jdbcType="BIGINT" />
    <result column="last_request_date" property="lastRequestDate" jdbcType="TIMESTAMP" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <resultMap id="TopicUnreadResult" type="com.linle.mobileapi.v1.model.TopicUnreadVO" >
  	<result column="topic_type_id" property="typeId"/>
  	<result column="unreadCount" property="unreadCount"/>
  	<result column="last_request_date" property="lastReadTime"/>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, user_id, type_id, last_request_date, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from c_topic_read_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from c_topic_read_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.linle.cTopicReadRecord.model.CTopicReadRecord" >
    insert into c_topic_read_record (id, user_id, type_id, 
      last_request_date, create_date, update_date
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{typeId,jdbcType=BIGINT}, 
      #{lastRequestDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.linle.cTopicReadRecord.model.CTopicReadRecord" >
    insert into c_topic_read_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="lastRequestDate != null" >
        last_request_date,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="lastRequestDate != null" >
        #{lastRequestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.linle.cTopicReadRecord.model.CTopicReadRecord" >
    update c_topic_read_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="lastRequestDate != null" >
        last_request_date = #{lastRequestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linle.cTopicReadRecord.model.CTopicReadRecord" >
    update c_topic_read_record
    set user_id = #{userId,jdbcType=BIGINT},
      type_id = #{typeId,jdbcType=BIGINT},
      last_request_date = #{lastRequestDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectRecordExist" parameterType="map" resultMap="BaseResultMap">
  	 select id
    from c_topic_read_record
    where user_id = #{userId} and type_id = #{typeId}
  </select>
  
  <update id="updateReadRecord" parameterType="map">
  	update c_topic_read_record
  	set last_request_date = now()
  	where user_id = #{userId} and type_id = #{typeId}
  </update>
  
  <select id="getTopicUnreadList" parameterType="map" resultMap="TopicUnreadResult">
  	select typeid,last_request_date from
	(select topic_type_id as typeid from c_topic_type where (is_del!=1 or isnull(is_del))) as topic_type
	left join (select user_id,type_id,last_request_date from c_topic_read_record where user_id = #{userId}) as record
	on topic_type.typeid = record.type_id
  </select>
</mapper>